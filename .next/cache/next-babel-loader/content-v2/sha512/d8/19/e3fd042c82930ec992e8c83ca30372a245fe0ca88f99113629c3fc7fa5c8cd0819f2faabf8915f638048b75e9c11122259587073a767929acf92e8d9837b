{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maya\\\\react-nextjs-complete-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from \"react\";\nimport Head from \"next/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from 'mongodb'; //putting [] means its a dynamic id\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description //in serach engine it will showup\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image //meetupData obj. defined below n it holds meetup item\n      ,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  //connect to DB with below code\n  const client = await MongoClient.connect(\"mongodb+srv://Manjula:manjula91@cluster0.zljlr.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\"); //to get all meetup data below code:\n\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray(); //_id:1 means instructionTo include id noOther field\n\n  client.close();\n  return {\n    fallback: 'blocking',\n    //this a way of nextjs saying there might be more pages\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) //map every meetup item to object,where every obj has params key\n\n  };\n} //DATA FETCHING FOR PRE RENDERING:consider it only your data is't frequently changing else getServerSideProps\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId; //meetupId bcoz thats what we have between sqaure brackets\n  //connect to DB with below code as did above\n\n  const client = await MongoClient.connect(\"mongodb+srv://Manjula:manjula91@cluster0.zljlr.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\"); //to get all meetup data below code:\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/Maya/react-nextjs-complete-project/pages/[meetupId]/index.js"],"names":["React","Head","MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Head from \"next/head\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport {MongoClient, ObjectId} from 'mongodb';\r\n\r\n//putting [] means its a dynamic id\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <Head>\r\n        <title>{props.meetupData.title}</title>\r\n        <meta\r\n          name=\"description\"\r\n          content={props.meetupData.description} //in serach engine it will showup\r\n        />\r\n      </Head>\r\n      <MeetupDetail\r\n        image={props.meetupData.image} //meetupData obj. defined below n it holds meetup item\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  //connect to DB with below code\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Manjula:manjula91@cluster0.zljlr.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  //to get all meetup data below code:\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray(); //_id:1 means instructionTo include id noOther field\r\n  client.close();\r\n\r\n  return {\r\n    fallback: 'blocking', //this a way of nextjs saying there might be more pages\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })), //map every meetup item to object,where every obj has params key\r\n  };\r\n}\r\n\r\n//DATA FETCHING FOR PRE RENDERING:consider it only your data is't frequently changing else getServerSideProps\r\nexport async function getStaticProps(context){\r\n  const meetupId = context.params.meetupId;//meetupId bcoz thats what we have between sqaure brackets\r\n  //connect to DB with below code as did above\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Manjula:manjula91@cluster0.zljlr.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  //to get all meetup data below code:\r\n  const selectedMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)});\r\n  client.close();\r\n\r\n  return{\r\n    props: {\r\n      meetupData:{\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description\r\n      } \r\n    },\r\n  };\r\n}\r\n \r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}